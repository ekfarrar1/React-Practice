{"ast":null,"code":"var _jsxFileName = \"/Users/emmafarrar/Desktop/React-Practice/React-Practice/job-feed-challenge/src/JobFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './CSS_modules/JobFeed.module.css';\nimport axios from 'axios';\n\n// GET API = `https://hacker-news.firebaseio.com/v0/jobstories.json`;\n// Metadata GET API = https://hacker-news.firebaseio.com/v0/item/YOUR_POST_ID_HERE.json`\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FetchData() {\n  _s();\n  const [IDs, setIDs] = useState([]);\n\n  // useEffect (no dependencies) \n  //pulls data from API using .get function, can see data or error in console (dev tools)\n  //if get is successful, IDs is set to response.data (the IDs)\n  useEffect(() => {\n    axios.get(`https://hacker-news.firebaseio.com/v0/jobstories.json`).then(response => {\n      console.log(response);\n      setIDs(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  });\n  console.log(IDs);\n\n  //return unordered list of IDs\n  return IDs\n  // <ul style={{ fontWeight: '200', textAlign: 'center' }}>\n  //   {\n  //     IDs.map(((id) => <li>{id}</li>))\n  //   }\n  // </ul>\n  ;\n}\n_s(FetchData, \"9FY1dJAEbvVDUT1H00uLG9aeY8U=\");\n_c = FetchData;\nfunction JobFeed() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.header,\n      children: \"Hackernews Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FetchData, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c2 = JobFeed;\n;\nexport default JobFeed;\nvar _c, _c2;\n$RefreshReg$(_c, \"FetchData\");\n$RefreshReg$(_c2, \"JobFeed\");","map":{"version":3,"names":["React","useState","useEffect","styles","axios","jsxDEV","_jsxDEV","FetchData","_s","IDs","setIDs","get","then","response","console","log","data","catch","error","_c","JobFeed","className","container","children","header","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/emmafarrar/Desktop/React-Practice/React-Practice/job-feed-challenge/src/JobFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './CSS_modules/JobFeed.module.css';\nimport axios from 'axios';\n\n// GET API = `https://hacker-news.firebaseio.com/v0/jobstories.json`;\n// Metadata GET API = https://hacker-news.firebaseio.com/v0/item/YOUR_POST_ID_HERE.json`\n\nfunction FetchData() {\n    const [IDs, setIDs] = useState([])\n\n    // useEffect (no dependencies) \n    //pulls data from API using .get function, can see data or error in console (dev tools)\n    //if get is successful, IDs is set to response.data (the IDs)\n    useEffect(() => {\n      axios.get(`https://hacker-news.firebaseio.com/v0/jobstories.json`)\n        .then(response =>{\n          console.log(response)\n          setIDs(response.data)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    })\n    console.log(IDs)\n\n    //return unordered list of IDs\n    return (      \n      IDs\n      // <ul style={{ fontWeight: '200', textAlign: 'center' }}>\n      //   {\n      //     IDs.map(((id) => <li>{id}</li>))\n      //   }\n      // </ul>\n  )\n}\n\nfunction JobFeed() {\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.header}>Hackernews Jobs</h1>\n      {<FetchData/>}\n    </div>\n  );\n};\n\nexport default JobFeed;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,kCAAkC;AACrD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAElC;EACA;EACA;EACAC,SAAS,CAAC,MAAM;IACdE,KAAK,CAACO,GAAG,CAAE,uDAAsD,CAAC,CAC/DC,IAAI,CAACC,QAAQ,IAAG;MACfC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBH,MAAM,CAACG,QAAQ,CAACG,IAAI,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,CAAC;EACFJ,OAAO,CAACC,GAAG,CAACN,GAAG,CAAC;;EAEhB;EACA,OACEA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEN;AAACD,EAAA,CA3BQD,SAAS;AAAAY,EAAA,GAATZ,SAAS;AA6BlB,SAASa,OAAOA,CAAA,EAAG;EACjB,oBACEd,OAAA;IAAKe,SAAS,EAAElB,MAAM,CAACmB,SAAU;IAAAC,QAAA,gBAC/BjB,OAAA;MAAIe,SAAS,EAAElB,MAAM,CAACqB,MAAO;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDtB,OAAA,CAACC,SAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACC,GAAA,GAPQT,OAAO;AAOf;AAED,eAAeA,OAAO;AAAC,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}