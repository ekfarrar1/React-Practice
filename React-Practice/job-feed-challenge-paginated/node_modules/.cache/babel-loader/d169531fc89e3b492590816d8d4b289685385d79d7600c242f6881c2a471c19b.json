{"ast":null,"code":"var _jsxFileName = \"/Users/emmafarrar/Desktop/React-Practice/React-Practice/job-feed-challenge/src/JobFeed.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './CSS_modules/JobFeed.module.css';\nimport axios from 'axios';\n\n// GET API = `https://hacker-news.firebaseio.com/v0/jobstories.json`;\n// Metadata GET API = https://hacker-news.firebaseio.com/v0/item/YOUR_POST_ID_HERE.json`\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FetchIds() {\n  _s();\n  const [IDs, setIDs] = useState([]);\n\n  // useEffect (no dependencies) \n  //pulls data from API using .get function, can see data or error in console (dev tools)\n  //if get is successful, IDs is set to response.data (the IDs)\n  useEffect(() => {\n    axios.get(`https://hacker-news.firebaseio.com/v0/jobstories.json`).then(response => {\n      console.log(response);\n      setIDs(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  //return unordered list of IDs\n  return IDs\n  // <ol style={{ fontWeight: '200', textAlign: 'left' }}>\n  //   {\n  //     IDs.map(((id) => <li>{id}</li>))\n  //   }\n  // </ol>\n  ;\n}\n_s(FetchIds, \"9FY1dJAEbvVDUT1H00uLG9aeY8U=\");\n_c = FetchIds;\nfunction Page() {\n  _s2();\n  const [pageNumber, setPageNumber] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      value: pageNumber,\n      onClick: e => {\n        setPageNumber(pageNumber + 1);\n      },\n      children: \" Next Page \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s2(Page, \"CR1SblK9/aPuhw0RURn2I9CvT1Q=\");\n_c2 = Page;\nfunction JobFeed() {\n  _s3();\n  const HACKERNEWS_POSTID_API = `https://hacker-news.firebaseio.com/v0/jobstories.json`;\n  const [posts, setPosts] = useState([]);\n  const [perPage, setPerPage] = useState(5);\n  const [jobIds, setJobIds] = useState([]);\n  const allIDs = FetchIds;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.header,\n      children: \"Hackernews Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s3(JobFeed, \"8QQPG1SIssgRNu9tgF/U2TXvVlY=\");\n_c3 = JobFeed;\n;\nexport default JobFeed;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FetchIds\");\n$RefreshReg$(_c2, \"Page\");\n$RefreshReg$(_c3, \"JobFeed\");","map":{"version":3,"names":["React","useState","useEffect","styles","axios","jsxDEV","_jsxDEV","FetchIds","_s","IDs","setIDs","get","then","response","console","log","data","catch","error","_c","Page","_s2","pageNumber","setPageNumber","children","value","onClick","e","fileName","_jsxFileName","lineNumber","columnNumber","_c2","JobFeed","_s3","HACKERNEWS_POSTID_API","posts","setPosts","perPage","setPerPage","jobIds","setJobIds","allIDs","className","container","header","_c3","$RefreshReg$"],"sources":["/Users/emmafarrar/Desktop/React-Practice/React-Practice/job-feed-challenge/src/JobFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './CSS_modules/JobFeed.module.css';\nimport axios from 'axios';\n\n// GET API = `https://hacker-news.firebaseio.com/v0/jobstories.json`;\n// Metadata GET API = https://hacker-news.firebaseio.com/v0/item/YOUR_POST_ID_HERE.json`\n\nfunction FetchIds() {\n    const [IDs, setIDs] = useState([])\n\n    // useEffect (no dependencies) \n    //pulls data from API using .get function, can see data or error in console (dev tools)\n    //if get is successful, IDs is set to response.data (the IDs)\n    useEffect(() => {\n      axios.get(`https://hacker-news.firebaseio.com/v0/jobstories.json`)\n        .then(response =>{\n          console.log(response)\n          setIDs(response.data)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    }, [])\n\n    //return unordered list of IDs\n    return (  \n      IDs\n      // <ol style={{ fontWeight: '200', textAlign: 'left' }}>\n      //   {\n      //     IDs.map(((id) => <li>{id}</li>))\n      //   }\n      // </ol>\n  )\n}\n\nfunction Page() {\n  const [pageNumber, setPageNumber] = useState(0);\n\n  return (\n    <div>\n      <button value={pageNumber} onClick={e => {\n        setPageNumber(pageNumber+1);\n      }}> Next Page </button>\n    </div>\n  )\n}\n\nfunction JobFeed() {\n  const HACKERNEWS_POSTID_API = `https://hacker-news.firebaseio.com/v0/jobstories.json`;\n  const [posts, setPosts] = useState([]);\n  \n  const [perPage, setPerPage] = useState(5);\n  const [jobIds, setJobIds] = useState([]);\n\n  const allIDs = FetchIds\n\n\n\n  \n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.header}>Hackernews Jobs</h1>\n      {/* {<FetchIds/>} */}\n    </div>\n  );\n};\n\nexport default JobFeed;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,kCAAkC;AACrD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAElC;EACA;EACA;EACAC,SAAS,CAAC,MAAM;IACdE,KAAK,CAACO,GAAG,CAAE,uDAAsD,CAAC,CAC/DC,IAAI,CAACC,QAAQ,IAAG;MACfC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBH,MAAM,CAACG,QAAQ,CAACG,IAAI,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,OACET;EACA;EACA;EACA;EACA;EACA;EAAA;AAEN;AAACD,EAAA,CA1BQD,QAAQ;AAAAY,EAAA,GAARZ,QAAQ;AA4BjB,SAASa,IAAIA,CAAA,EAAG;EAAAC,GAAA;EACd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAE/C,oBACEK,OAAA;IAAAkB,QAAA,eACElB,OAAA;MAAQmB,KAAK,EAAEH,UAAW;MAACI,OAAO,EAAEC,CAAC,IAAI;QACvCJ,aAAa,CAACD,UAAU,GAAC,CAAC,CAAC;MAC7B,CAAE;MAAAE,QAAA,EAAC;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV;AAACV,GAAA,CAVQD,IAAI;AAAAY,GAAA,GAAJZ,IAAI;AAYb,SAASa,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACjB,MAAMC,qBAAqB,GAAI,uDAAsD;EACrF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACqC,OAAO,EAAEC,UAAU,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACuC,MAAM,EAAEC,SAAS,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMyC,MAAM,GAAGnC,QAAQ;EAMvB,oBACED,OAAA;IAAKqC,SAAS,EAAExC,MAAM,CAACyC,SAAU;IAAApB,QAAA,eAC/BlB,OAAA;MAAIqC,SAAS,EAAExC,MAAM,CAAC0C,MAAO;MAAArB,QAAA,EAAC;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE/C,CAAC;AAEV;AAACG,GAAA,CAnBQD,OAAO;AAAAa,GAAA,GAAPb,OAAO;AAmBf;AAED,eAAeA,OAAO;AAAC,IAAAd,EAAA,EAAAa,GAAA,EAAAc,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAAf,GAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}